// <auto-generated />
using CatalogWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230223141651_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("catalog_company_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("catalog_genre_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("catalog_item_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("CatalogWebAPI.Data.Entities.CatalogCompanyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_company_hilo");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)");

                    b.HasKey("Id");

                    b.ToTable("CatalogCompany", (string)null);
                });

            modelBuilder.Entity("CatalogWebAPI.Data.Entities.CatalogGenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_genre_hilo");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("CatalogGenre", (string)null);
                });

            modelBuilder.Entity("CatalogWebAPI.Data.Entities.CatalogItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "catalog_item_hilo");

                    b.Property<int>("AvailableStock")
                        .HasColumnType("integer");

                    b.Property<int>("CatalogCompanyId")
                        .HasColumnType("integer");

                    b.Property<int>("CatalogGenreId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PictureFileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CatalogCompanyId");

                    b.HasIndex("CatalogGenreId");

                    b.ToTable("Catalog", (string)null);
                });

            modelBuilder.Entity("CatalogWebAPI.Data.Entities.CatalogItemEntity", b =>
                {
                    b.HasOne("CatalogWebAPI.Data.Entities.CatalogCompanyEntity", "CatalogCompany")
                        .WithMany()
                        .HasForeignKey("CatalogCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatalogWebAPI.Data.Entities.CatalogGenreEntity", "CatalogGenre")
                        .WithMany()
                        .HasForeignKey("CatalogGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatalogCompany");

                    b.Navigation("CatalogGenre");
                });
#pragma warning restore 612, 618
        }
    }
}
